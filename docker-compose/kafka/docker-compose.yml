# https://zenn.dev/gekal/articles/kafka-env-for-local-developmen-use-docker-compose
version: "3"
services:
    kafka-broker:
        image: confluentinc/cp-kafka:6.2.4
        restart: always
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:19092,PLAINTEXT_DOCKER_INTERNAL://localhost:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_HOST_NAME: kafka-broker
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.4
        restart: always
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: "2181"

    cp-kafka-rest:
        image: confluentinc/cp-kafka-rest:6.2.4
        restart: always
        depends_on:
            - "kafka-broker"
            - "zookeeper"
        environment:
            KAFKA_REST_BOOTSTRAP_SERVERS: "kafka-broker:19092"
            KAFKA_REST_CLIENT_SECURITY_PROTOCOL: "PLAINTEXT"
            KAFKA_REST_HOST_NAME: "cp-kafka-rest"
            KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"

    # 管理界面（http://localhost:8000）
    kafka-topic-ui:
        image: landoop/kafka-topics-ui:0.9.4
        restart: always
        depends_on:
            - "kafka-broker"
            - "zookeeper"
            - "cp-kafka-rest"
        ports:
            - "8000:8000"
        environment:
            KAFKA_REST_PROXY_URL: "http://cp-kafka-rest:8082"
            PROXY: "true"